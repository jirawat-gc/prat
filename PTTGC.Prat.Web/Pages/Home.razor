@page "/"

<div class="aiapp-header d-flex p-2">

    <img src="/images/logo_askmegc.svg" style="width: 100px" />

    <h1 class="ms-2 logo align-self-center">
        PRAT
    </h1>

    <div class="flex-fill ms-4 me-4 align-self-center">

        <div class="progressgradient p-2 text-center w-50 fading @(Helper.ShowIf(this.IsBusy))"
             style="margin: auto auto; min-height: 2em">
            @(this.LogMessage)
        </div>

    </div>
    <div class="user align-self-center">

        <button class="btn btn-outline-success"
                @onclick="this.SaveWorkspace">
            <i class="bi bi-cloud-arrow-up"></i>
            Save Workspace
        </button>

        <button class="btn btn-outline-primary"
                @onclick="this.SaveWorkspace">
            <i class="bi bi-share"></i>
            Share Workspace
        </button>
    </div>

</div>

<div class="container-fluid aiapp-container">
    <div class="row">

        <div class="sidebar col-lg-2 pt-4">

            <button class="btn btn-outline-light d-block w-100">
                New Workspace
            </button>

            <div class="mt-4">
                <b class="text">
                    Workspaces:
                </b>
            </div>

            <ul class="mt-1">
                <li class="active">
                    @(this.Workspace.InnovationTitle)
                </li>
                <li class="">
                    Packaged ready-to-eat stir-fried chicken with basil with 300 days shelf life
                </li>
            </ul>

        </div>

        <div class="new col-lg-4 pt-4 pb-4 ps-4">

            <div class="aiapp-block">

                <div class="d-flex mb-4">

                    <h2 class="flex-fill">
                        Your New Innovation
                    </h2>

                    <button class="btn btn-lg btn-success disabling @(Helper.ActiveIf(this.IsBusy))"
                            @onclick="this.ProcessWorkspace">
                        Discover
                        <i class="bi bi-arrow-right-circle ms-2"></i>
                    </button>

                </div>

                <div class="form-floating mb-3">
                    <textarea id="innovationTitle" style="height: 100px"
                              class="form-control form-control-lg"
                              @bind="this.Workspace.InnovationTitle">
                    </textarea>
                    <label for="innovationTitle">Innovation Title</label>
                </div>

                <div class="form-floating mt-1">
                    <textarea class="form-control mt-1" style="height: 150px"
                              @bind="this.Workspace.InnovationDescription">
                    </textarea>
                    <label for="floatingTextarea">Description</label>
                </div>

                <div class="form-floating mt-1">
                    <textarea class="form-control mt-1" style="height: 150px"
                              @bind="this.Workspace.InnovationApplication">
                    </textarea>
                    <label for="floatingTextarea">Application for this innovation</label>
                </div>

                <div class="mt-3">
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox"
                               @bind="this.Workspace.InnovationIsPolymer">
                        <label class="form-check-label">Innovation is Polymer</label>
                    </div>
                </div>

                <div class="mt-3">
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox"
                               @bind="this.Workspace.InnovationIncludeTestResults" />
                        <label class="form-check-label">Specify Test Results</label>
                    </div>
                </div>

                <div class="mt-3">
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox"
                               @bind="this.IsDemo" />
                        <label class="form-check-label">Demo Mode : load DEMO polymer patents to demonstrate full feature</label>
                    </div>
                </div>

                <div class="polymer-attributes mt-4 collapsible @(Helper.ShowIf(this.Workspace.InnovationIsPolymer))" id="polymerattribute">

                    <div class="fw-bold mb-1">
                        Polymer Information
                    </div>
                    <div class="d-flex">
                        <div class="form-floating flex-fill">
                            <input type="text" id="innovationPolymerKind"
                                   class="form-control"
                                   @bind="this.Workspace.InnovationPolymerKind" />
                            <label for="innovationPolymerKind">Polymer Kind</label>
                        </div>

                        <div class="form-floating flex-fill ms-3">
                            <input type="text" id="innovationPolymerComoner"
                                   class="form-control"
                                   @bind="this.Workspace.InnovationComonomer" />
                            <label for="innovationPolymerComoner">Polymer Comonomer</label>
                        </div>
                    </div>
                </div>

                <div class="chemical-attributes mt-2 collapsible @(Helper.ShowIf(this.Workspace.InnovationIncludeTestResults))" id="chemattribute">

                    <div class="new-attribute">

                        <button class="btn btn-outline-secondary dropdown-toggle mb-1 d-block text-start" type="button" data-bs-toggle="dropdown" aria-expanded="false"
                                style="min-width: 200px">
                            @(this.NewMaterialAttributeItem.AttributeName ?? "(Select Attribute)")
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end p-2">

                            <li>
                                <input type="text" class="form-control"
                                       @bind="this.NewMaterialAttributeItem.AttributeName"
                                       @bind:event="oninput"
                                       placeholder="Custom Attribute" />
                            </li>
                            <li><hr class="dropdown-divider"></li>

                            @foreach (var attr in _CommonAttributes.OrderBy(a => a.attribute))
                            {
                                <li>
                                    <div class="dropdown-item" href="#"
                                         @onclick="() => this.ChangeMaterialAttribute(this.NewMaterialAttributeItem, attr)">
                                        @(attr.attribute)
                                    </div>
                                </li>
                            }

                        </ul>

                        <div class="input-group w-100">

                            <input type="number" class="form-control"
                                   @bind="this.NewMaterialAttributeItem.LowerBound"
                                   placeholder="Lower Bound" />

                            <input type="number" class="form-control"
                                   @bind="this.NewMaterialAttributeItem.UpperBound"
                                   placeholder="Upper Bound" />


                            <span class="input-group-text" style="width: 25%">
                                @if (this.IsCustomAttribute(this.NewMaterialAttributeItem))
                                {
                                    <input type="text" class="form-control"
                                           @bind="this.NewMaterialAttributeItem.MeasurementUnit"
                                           placeholder="Unit" />
                                }
                                else
                                {
                                    @(this.NewMaterialAttributeItem.MeasurementUnit)
                                }
                            </span>

                            <button class="btn btn-success disabling @(Helper.ActiveIf(this.IsBusy))"
                                    @onclick="this.AddNewMaterialAttribute">
                                <i class="bi bi-plus-circle"></i>
                            </button>
                        </div>


                    </div>

                    <hr />

                    @foreach (var item in this.Workspace.MaterialAttributes)
                    {
                        <div class="mb-3">

                            <div class="fw-bold mb-1">
                                @(item.AttributeName)
                            </div>

                            <div class="input-group w-100">

                                <input type="number" class="form-control"
                                       @bind="item.LowerBound"
                                       placeholder="Enter Attribute" />

                                <input type="number" class="form-control"
                                       @bind="item.UpperBound"
                                       placeholder="Enter Attribute" />


                                <span class="input-group-text" style="width: 25%">
                                    @if (this.IsCustomAttribute(item))
                                    {
                                        <input type="text" class="form-control"
                                               @bind="item.MeasurementUnit"
                                               placeholder="Unit" />
                                    }
                                    else
                                    {
                                        @(item.MeasurementUnit)
                                    }
                                </span>

                                <button class="btn btn-outline-secondary disabling @(Helper.ActiveIf(this.IsBusy))"
                                        @onclick="@(() => this.RemoveNewMaterialAttribute(item))">
                                    <i class="bi bi-x-circle"></i>
                                </button>
                            </div>
                        </div>

                    }



                </div>

            </div>

        </div>

        <div class="research col-lg-6 pt-4 pb-4">

            <div class="aiapp-block">

                <div class="clusterview d-flex">

                    <div class="scatterplot flex-fill"
                         id="clusterview">

                        

                    </div>

                    <div class="sample p-2 w-25">

                        <div class="@(this.Workspace.AIPredictedCluster == "-1" ? "outlier" : "")">
                            <h3>
                                @if (string.IsNullOrEmpty(this.Workspace.AIPredictedCluster))
                                {
                                    @("?")
                                }
                                else
                                {
                                    @(this.Workspace.AIPredictedCluster == "-1" ? "(Outlier)" : this.Workspace.AIPredictedCluster)
                                }
                            </h3>
                            Predicted Cluster
                        </div>

                        <div>
                            <h3>
                                C@(_SelectedCluster?.ClusterLabel ?? "?")
                            </h3>
                            Selected Cluster
                        </div>

                    </div>
                </div>


                <div class="stats">

                    <div class="stat">
                        <h3>
                            @(this.Workspace.AIPredictedCluster == "-1" ? "?" : (this.Workspace.MatchingCluster?.PatentApplicationIds?.Count ?? 0))
                        </h3>
                        <div>
                            in predicted cluster
                        </div>
                    </div>

                    <div class="stat">
                        <h3>
                            @(_SelectedCluster == null ? "?" : _SelectedCluster.PatentApplicationIds.Count)
                        </h3>
                        <div>
                            in selected cluster
                        </div>
                    </div>

                    <div class="stat">
                        <h3>
                            @(this.Workspace.SimilarPatent.Count == 0 ? "?" : this.Workspace.SimilarPatent.Count.ToString())
                        </h3>
                        <div>
                            Similar,
                            <br />> 75%
                        </div>
                    </div>

                    <div class="low">
                        <h3>
                            @(this.Workspace.PatentsToAnalyze.All(p => p.Analysis.HumanDecision == null) ? "?" : this.Workspace.PatentsToAnalyze.Count( p => p.Analysis.HumanDecision == "Low") )
                        </h3>
                        <div>
                            Low
                            <br />Risk
                        </div>
                    </div>

                    <div class="medium">
                        <h3>
                            @(this.Workspace.PatentsToAnalyze.All(p => p.Analysis.HumanDecision == null) ? "?" : this.Workspace.PatentsToAnalyze.Count(p => p.Analysis.HumanDecision == "Medium"))
                        </h3>
                        <div>
                            Medium
                            <br />Risk
                        </div>
                    </div>

                    <div class="high">
                        <h3>
                            @(this.Workspace.PatentsToAnalyze.All(p => p.Analysis.HumanDecision == null) ? "?" : this.Workspace.PatentsToAnalyze.Count(p => p.Analysis.HumanDecision == "High"))
                        </h3>
                        <div>
                            High
                            <br />Risk
                        </div>
                    </div>
                </div>



            </div>

            <div class="aiapp-block mt-4">

                <div class="patents similar">

                    <div class="patentlist">

                        @foreach (var item in this.Workspace.PatentsToAnalyze)
                        {
                            <div>
                                <div class="d-flex">
                                    <h5>
                                        <a href="@(item.PatentClaimUrl)" target="_blank">
                                            @(item.ApplicationId)
                                        </a>
                                    </h5>
                                    <div>
                                        @if (item.Analysis.IsAnalyzing == false)
                                        {
                                            <div class="btn-group" role="group" aria-label="Button group with nested dropdown">
                                                <button class="btn btn-outline-success disabling @(Helper.ActiveIf(this.IsBusy))"
                                                        @onclick="() => this.ExtractPatentForUI(item)">
                                                    <i class="bi bi-eye"></i>
                                                    Extract
                                                </button>
                                                <button class="btn btn-outline-success disabling @(Helper.ActiveIf(this.IsBusy))"
                                                        @onclick="() => this.AnalyzePatentForUI(item)">
                                                    <i class="bi bi-lightbulb"></i>
                                                    Analyze
                                                </button>
                                            </div>


                                        }
                                        else
                                        {
                                            <div class="spinner-grow text-primary" role="status">
                                                <span class="visually-hidden">Loading...</span>
                                            </div>
                                        }

                                    </div>
                                </div>
                                <h4>@(item.Title)</h4>
                                <div>
                                    @if (item.Analysis.IsAnalysisCompleted == false)

                                    {

                                        @("(Pending Analysis)")

                                    }
                                    else
                                    {
                                        <div class="analysis mt-2">
                                            <div @onclick="() => this.ViewPatent(item)"
                                                 class="clickable">
                                                <h4>
                                                    @(item.Analysis.Claims.Count)
                                                    <i class="bi bi-box-arrow-in-up-right"></i>
                                                </h4>
                                                Claims
                                            </div>

                                            <div>
                                                <h4>
                                                    @(item.Analysis.Claims.Count(c => c.citations?.Count == 0))
                                                </h4>
                                                Main Claims
                                            </div>

                                            <div>
                                                <h4>
                                                    @(item.Analysis.SameApplications?.Count ?? 0)
                                                </h4>
                                                Similar Application
                                            </div>

                                            <div @onclick="@(() => this.ViewPatent(item, "#attributeViewer"))"
                                                 class="clickable ms-4">
                                                <h4>
                                                    @(item.Analysis.TestResults.Count)
                                                    <i class="bi bi-box-arrow-in-up-right"></i>
                                                </h4>
                                                Attributes
                                            </div>

                                            <div>
                                                <h4>
                                                    @(item.Analysis.SameAttributes?.Count ?? 0)
                                                </h4>
                                                Match
                                            </div>

                                            <div>
                                                <h4>
                                                    @(item.Analysis.MissingAttributes?.Count ?? 0)
                                                </h4>
                                                Missing
                                            </div>

                                            <div class="flex-fill" style="visibility: hidden">
                                            </div>

                                            <div class="btn-group">
                                                <button type="button" class="btn btn-outline-primary @(item.Analysis.HumanDecision ?? "no-decision")   dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                                    @(item.Analysis.HumanDecision ?? "(No Decision)")                                                    
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li @onclick="@(() => item.Analysis.HumanDecision = "Low")">
                                                        <span class="dropdown-item">
                                                            Low Risk
                                                        </span>
                                                    </li>
                                                    <li @onclick="@(() => item.Analysis.HumanDecision = "Medium")">
                                                        <span class="dropdown-item">
                                                            Medium Risk
                                                        </span>
                                                    </li>
                                                    <li @onclick="@(() => item.Analysis.HumanDecision = "High")">
                                                        <span class="dropdown-item">
                                                            High Risk
                                                        </span>
                                                    </li>
                                                    <li><hr class="dropdown-divider"></li>
                                                    <li @onclick="@(() => item.Analysis.HumanDecision = null)">
                                                        <span class="dropdown-item">
                                                            Undecided
                                                        </span>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>

            </div>

        </div>

    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="viewingPatentModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="viewingPatentLabel" aria-hidden="true"
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="viewingPatentLabel">
                    Claims Explorer: @(this.ViewingPatent.Title) @(this.ViewingPatent.ApplicationId)
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" style="min-height: 500px">

                @foreach (var item in Util.SafeEnumerate(this.ViewingPatent?.Analysis?.Claims))
                {
                        <button class="btn btn-outline-primary ms-1 position-relative @(item == _ActiveClaim ? "active" : "")"
                        @onclick=@(() => this.ClaimExplorer_SetActiveClaim(item))>
                        @(item.index)

                        @if (item.citations?.Count == 0)
                        {
                            <span class="position-absolute top-0 start-100 translate-middle p-2 bg-danger border border-light rounded-circle">
                                <span class="visually-hidden">New alerts</span>
                            </span>
                        }
                    </button>
                }


                <div class="d-flex mt-4" style="gap: 10px">
                    <div class="w-50 fw-bold">
                        Claim
                    </div>
                    <div class="w-50 fw-bold">
                        Citations
                    </div>
                </div>

                <div class="d-flex mt-1" style="gap: 10px">
                    <div class=" w-50">
                        <b>@(_ActiveClaim?.index):</b>
                        @(_ActiveClaim?.claim)

                        <br/>

                        Citations:

                        @foreach (var index in Util.SafeEnumerate(_ActiveClaim?.citations))
                        {
                            <b>@($"[{index}]")</b>
                        }

                    </div>
                    <ul class="list-group w-50">

                        @if (Util.SafeEnumerate(_ActiveClaim?.citations).Count() == 0)
                        {
                             <li class="list-group-item">
                                (This is a standalone claim)
                            </li>
                        }

                        @foreach (var index in Util.SafeEnumerate(_ActiveClaim?.citations))
                        {
                            var item = this.ViewingPatent?.Analysis?.Claims.FirstOrDefault(c => c.index == index);
                            <li class="list-group-item">
                                <b>@(item.index)</b>:
                                @(item.claim)

                                <ul class="list-group mt-2">
                                    @foreach (var nestedIndex in Util.SafeEnumerate(item?.citations))
                                    {
                                        var nestedItem = this.ViewingPatent?.Analysis?.Claims.FirstOrDefault(c => c.index == index);
                                        <li class="list-group-item">
                                            <b>@(nestedIndex):</b>
                                            @(nestedItem.claim)
                                        </li>
                                    }
                                </ul>

                            </li>
                        }

                    </ul>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="modal modal-lg fade" id="attributeViewer" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="attributeViewerLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="attributeViewerLabel">
                    Attributes:  @(this.ViewingPatent.Title) @(this.ViewingPatent.ApplicationId)
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <h5>From Patent:</h5>
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Attribute</th>
                            <th>Lower bound</th>
                            <th>Upper bound</th>
                            <th>Unit</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Util.SafeEnumerate(this.ViewingPatent?.Analysis?.TestResults)
                        .OrderBy(item => item.attribute))
                        {
                            <tr>
                                <td>
                                    @(item.attribute)
                                </td>
                                <td>
                                    @(item.value_lower_bound)
                                </td>
                                <td>
                                    @(item.value_upper_bound)
                                </td>
                                <td>
                                    @(item.unit)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <h5>Ours:</h5>
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Attribute</th>
                            <th>Lower bound</th>
                            <th>Upper bound</th>
                            <th>Unit</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Util.SafeEnumerate(this.Workspace?.MaterialAttributes))
                        {
                            <tr>
                                <td>
                                    @(item.AttributeName) <br />

                                    @{
                                        var same = Util.SafeEnumerate(this.ViewingPatent?.Analysis?.SameAttributes)
                                        .Any(sa => sa.attribute == item.AttributeName);
                                        var missing = Util.SafeEnumerate(this.ViewingPatent?.Analysis?.MissingAttributes)
                                        .Any(sa => sa.attribute == item.AttributeName);
                                    }

                                    @if (same)
                                    {
                                        <span class="badge bg-primary">Match</span>
                                    }

                                    @if (missing)
                                    {
                                        <span class="badge bg-warning">No Match</span>
                                    }

                                </td>
                                <td>
                                    @(item.LowerBound)
                                </td>
                                <td>
                                    @(item.UpperBound)
                                </td>
                                <td>
                                    @(item.MeasurementUnit)
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>


            </div>
        </div>
    </div>
</div>